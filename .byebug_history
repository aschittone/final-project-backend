exit
comps_hash["comps"]["message"]["code"]
comps_hash["comps"]["request"]
comps_hash["request"]
comps_hash[:request]
comps_hash.request
comps_hash
rent_estimate
comps.body
comps
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
original_results["searchresults"]["response"]["results"]["result"]
c
response.body
response
c
url_address
exit
c
step
count
step
sum
count
sum
step
sum
step
sum
step
sum
step
sum
step
exit
comp["rentzestimate"]["amount"].to_i
comp["rentzestimate"]
exit
step
comp["rentzestimate"]["amount"]
step
sum
step
comp
step
comp
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
c
step
c
exit
response_hash
c
exit
step
z_property_id
exit
c
step
url_address
c
final_result
c
rent_estimate
exit
rent_estimate
c
exit
final_result
exit
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"][0]["rentzestimate"]
original_results["searchresults"]["response"]["results"]["result"]["rentzestimate"]["amount"]
original_results["searchresults"]["response"]["results"]["result"]["rentzestimate"]
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]["zestimate"]
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
parse_page = Nokogiri::XML(page)
page = HTTParty.get("http://www.zillow.com/webservice/GetDeepComps.htm?zws-id=X1-ZWz1fzorn263gr_9abc1&zpid=#{z_property_id}&count=5&rentzestimate=true")
xml_doc  = Nokogiri::XML(comps_hash)
xml_doc  = Nokogiri::XML(comps)
comps
xml_doc
xml_doc  = Nokogiri::XML("comps")
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]["rentzestimate"]
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
comps_hash["comps"]["response"]["properties"]["comparables"]
exit
comps_hash["comps"]["response"]["properties"]["comparables"exit
comps_hash["comps"]["response"]["properties"]["comparables"]
comps_hash["comps"]["response"]["properties"]["principal"]
comps_hash["comps"]["response"]["properties"]["principle"]
comps_hash["comps"]["response"]["properties"]["princaple"]
comps_hash["comps"]["response"]["properties"]
comps_hash["searchresults"]["response"]["results"]["result"]
comps_hash["searchresults"]["response"]["results"]["result"]["rentzestimate"]
comps_hash = Hash.from_xml(comps.body)
comps
comps_hash
exit
response_hash["searchresults"]["response"]["results"]["result"]["zestimatea"]exit
response_hash["searchresults"]["response"]["results"]["result"]["zestimatea"]
response_hash["searchresults"]["response"]["results"]["result"]["zestimate"]
response_hash
c
exit
parse_page.css('img')[2].value
parse_page.css('img')[2].url
parse_page.css('img')[2].text
parse_page.css('img')[2]
parse_page.css('img')[1]
parse_page.css('img')[0]
parse_page.css('img')
parse_page = Nokogiri::HTML(new)
new = HTTParty.get("http://www.estately.com/listings/info/1057-coolidge-rd--1")
parse_page = Nokogiri::HTML(new)
new = HTTParty.get("https://www.redfin.com/NJ/Elizabeth/1057-Coolidge-Rd-07208/home/37878434")
page = HTTParty.get("https://www.zillow.com/homes/for_sale/39994421_zpid/0-500000_price/0-1837_mp/globalrelevanceex_sort/40.705303,-74.194622,40.634734,-74.304657_rect/12_zm/0_mmm/")
page = HTTParty.get(https://www.zillow.com/homes/for_sale/39994421_zpid/0-500000_price/0-1837_mp/globalrelevanceex_sort/40.705303,-74.194622,40.634734,-74.304657_rect/12_zm/0_mmm/)
original_results["searchresults"]["response"]["results"]["result"]["links"]["homedetails"]
parse_page.css(".zsg-content-component")
parse_page.css(".notranslate")
parse_page.css(".notranslate.zsg-content-item")
parse_page.css(.notranslate.zsg-content-item)
parse_page
c
exit
response_hash
c
exit
response_hash
c
exit
z_property_id
c
exit
z_property_id
c
exit
response_hash
response.body
z_property_id
c
exit
z_property_id
c
exit
response_hash
c
url_address
exit
response_hash
exit
zillow_id
response_hash
exit
new["searchresults"]["response"]["results"]["result"]["zpid"]
new["searchresults"]["response"]["results"["result"]["zpid"]
new["searchresults"]["response"]
new["searchresults"]
new = Hash.from_xml(response.body)
response.body
response
json_response
exit
response.body
exit
response.body
exit
url_address
c
exit
split_address[2].slice(0,2)
split_address[2].slice(0,1)
split_address[2]
split_address[0].gsub(/ /, '+')
address.split(", ")
split_address
exit
listing_params["address"]
listing_params.address
listing_params
params
