c
response
c
url_address[1]
city
city != url_address[1]
c
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"] == hash
comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
c
comps_hash
c
url_address.length < 4
state != url_address[2]
city != url_address[1]
state != url_address[0]
url_address.length < 4 && state != url_address[0] || city != url_address[1] || state != url_address[2]
c
url_address
url_address.length < 4
c
cc
c
split_address[split_address.length - 1].include?("second")
split_address[split_address.length - 1].includes?("second")
split_address[split_address.length - 1]
split_address.length - 1
state
city
split_address
c
listing_params["address"]
params
url_address
c
params
c
params
c
listing_params
params
c
response_hash["searchresults"]["response"]["results"]["result"]["address"]c
response_hash["searchresults"]["response"]["results"]["result"]["address"]
response_hash["searchresults"]["response"]["results"]["result"]
response_hash
url_address = split_address(listing_params["address"])
c
step
url_address
c
JSON.parse(data[:body])["status"]["msg"]
data
JSON.parse(data[:body])["property"])
JSON.parse(data[:body])["property"]
c
step
city = results[0]["address"]["city"]
step
result
step
[original_results["searchresults"]["response"]["results"]["result"], actual_comps, rent_estimate]
step
actual_comps = comps_hash["comps"]["response"]["properties"]["comparables"]["comp"]
step
steo
original_results["searchresults"]["response"]["results"]["result"]["rentzestimate"]["amount"].to_i
step
comps_hash
c
comps
comps_hash
original_results
step
result
c
url_address
c
url_address
response
response_hash
c
final_result
step
JSON.parse(data[:body])["property"].length >= 1 || JSON.parse(data[:body])["status"]["msg"] != "SuccessWithoutResult"
c
step
comps_hash["comps"]["message"]["code"] == "504" || comps_hash["comps"]["message"]["code"] == "503"
comps_hash
step
comps_hash
exit
current_user
params
exit
current_user
exit
current_user
current_user.update(assets: params[:assets], average_annual_income: params[:averageAnnualIncome], credit_score: params[:creditScore], total_debt: params[:totalDebt])
params
current_user
exit
params
exit
params
c
response
c
response
c
response
c
